// Generated by purs version 0.13.6
"use strict";
var Control_Apply = require("../Control.Apply/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_HashSet = require("../Data.HashSet/index.js");
var Data_Hashable = require("../Data.Hashable/index.js");
var Data_Lens_Getter = require("../Data.Lens.Getter/index.js");
var Data_Lens_Internal_Forget = require("../Data.Lens.Internal.Forget/index.js");
var Data_Lens_Record_Newtype = require("../Data.Lens.Record.Newtype/index.js");
var Data_Lens_Setter = require("../Data.Lens.Setter/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Effect = require("../Effect/index.js");
var Graphics_Canvas = require("../Graphics.Canvas/index.js");
var $$Math = require("../Math/index.js");
var Ui = require("../Ui/index.js");
var Position = function (x) {
    return x;
};
var Player = function (x) {
    return x;
};
var GameState = function (x) {
    return x;
};
var newtypePosition = new Data_Newtype.Newtype(function (n) {
    return n;
}, Position);
var newtypePlayer = new Data_Newtype.Newtype(function (n) {
    return n;
}, Player);
var newtypeGameState = new Data_Newtype.Newtype(function (n) {
    return n;
}, GameState);
var runSpeedGet = Data_Lens_Getter.view((function (dictStrong) {
    var $38 = Data_Lens_Record_Newtype["_f"](new Data_Symbol.IsSymbol(function () {
        return "player";
    }))(newtypeGameState)(newtypeGameState)()()(Data_Lens_Record_Newtype.l)(dictStrong);
    var $39 = Data_Lens_Record_Newtype["_f"](new Data_Symbol.IsSymbol(function () {
        return "runSpeed";
    }))(newtypePlayer)(newtypePlayer)()()(Data_Lens_Record_Newtype.l)(dictStrong);
    return function ($40) {
        return $38($39($40));
    };
})(Data_Lens_Internal_Forget.strongForget));
var initialGameState = {
    player: {
        runSpeed: 0.5,
        position: {
            x: 100.0,
            y: 101.0
        }
    }
};
var initialState = Ui.initialState(initialGameState);
var drawPlayer = function (v) {
    return function (context) {
        return Control_Apply.applySecond(Effect.applyEffect)(Graphics_Canvas.setStrokeStyle(context)("#000"))(Graphics_Canvas.strokePath(context)(Graphics_Canvas.arc(context)({
            x: $$Math.round(v.position.x),
            y: $$Math.round(v.position.y),
            radius: 5.0,
            start: 0.0,
            end: $$Math.tau
        })));
    };
};
var drawGame = function (v) {
    return drawPlayer(v.player);
};
var draw = function (v) {
    return drawGame(v.value0);
};
var _y = function (dictStrong) {
    var $41 = Data_Lens_Record_Newtype.field(new Data_Symbol.IsSymbol(function () {
        return "player";
    }))(newtypeGameState)(newtypeGameState)()()(Data_Lens_Record_Newtype.l)(dictStrong);
    var $42 = Data_Lens_Record_Newtype.field(new Data_Symbol.IsSymbol(function () {
        return "position";
    }))(newtypePlayer)(newtypePlayer)()()(Data_Lens_Record_Newtype.l)(dictStrong);
    var $43 = Data_Lens_Record_Newtype.field(new Data_Symbol.IsSymbol(function () {
        return "y";
    }))(newtypePosition)(newtypePosition)()()(Data_Lens_Record_Newtype.l)(dictStrong);
    return function ($44) {
        return $41($42($43($44)));
    };
};
var _x = function (dictStrong) {
    var $45 = Data_Lens_Record_Newtype.field(new Data_Symbol.IsSymbol(function () {
        return "player";
    }))(newtypeGameState)(newtypeGameState)()()(Data_Lens_Record_Newtype.l)(dictStrong);
    var $46 = Data_Lens_Record_Newtype.field(new Data_Symbol.IsSymbol(function () {
        return "position";
    }))(newtypePlayer)(newtypePlayer)()()(Data_Lens_Record_Newtype.l)(dictStrong);
    var $47 = Data_Lens_Record_Newtype.field(new Data_Symbol.IsSymbol(function () {
        return "x";
    }))(newtypePosition)(newtypePosition)()()(Data_Lens_Record_Newtype.l)(dictStrong);
    return function ($48) {
        return $45($46($47($48)));
    };
};
var updateGame = function (v) {
    return function (v1) {
        if (v1 instanceof Ui.Tick) {
            if (Data_Eq.eq(Data_HashSet.eqHashSet(Data_Eq.eqString))(v.value1)(Data_HashSet.singleton(Data_Hashable.hashableString)("w"))) {
                return Data_Lens_Setter.over(_y(Data_Profunctor_Strong.strongFn))(function (v2) {
                    return v2 - v1.value0 * runSpeedGet(v.value0);
                })(v.value0);
            };
            if (Data_Eq.eq(Data_HashSet.eqHashSet(Data_Eq.eqString))(v.value1)(Data_HashSet.singleton(Data_Hashable.hashableString)("a"))) {
                return Data_Lens_Setter.over(_x(Data_Profunctor_Strong.strongFn))(function (v2) {
                    return v2 - v1.value0 * runSpeedGet(v.value0);
                })(v.value0);
            };
            if (Data_Eq.eq(Data_HashSet.eqHashSet(Data_Eq.eqString))(v.value1)(Data_HashSet.singleton(Data_Hashable.hashableString)("s"))) {
                return Data_Lens_Setter.over(_y(Data_Profunctor_Strong.strongFn))(function (v2) {
                    return v2 + v1.value0 * runSpeedGet(v.value0);
                })(v.value0);
            };
            if (Data_Eq.eq(Data_HashSet.eqHashSet(Data_Eq.eqString))(v.value1)(Data_HashSet.singleton(Data_Hashable.hashableString)("d"))) {
                return Data_Lens_Setter.over(_x(Data_Profunctor_Strong.strongFn))(function (v2) {
                    return v2 + v1.value0 * runSpeedGet(v.value0);
                })(v.value0);
            };
        };
        return v.value0;
    };
};
var update = Ui.update(updateGame);
module.exports = {
    initialState: initialState,
    update: update,
    draw: draw
};
