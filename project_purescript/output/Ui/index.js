// Generated by purs version 0.13.6
"use strict";
var Data_HashSet = require("../Data.HashSet/index.js");
var Data_Hashable = require("../Data.Hashable/index.js");
var State = (function () {
    function State(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    State.create = function (value0) {
        return function (value1) {
            return new State(value0, value1);
        };
    };
    return State;
})();
var KeyDown = (function () {
    function KeyDown(value0) {
        this.value0 = value0;
    };
    KeyDown.create = function (value0) {
        return new KeyDown(value0);
    };
    return KeyDown;
})();
var KeyUp = (function () {
    function KeyUp(value0) {
        this.value0 = value0;
    };
    KeyUp.create = function (value0) {
        return new KeyUp(value0);
    };
    return KeyUp;
})();
var Tick = (function () {
    function Tick(value0) {
        this.value0 = value0;
    };
    Tick.create = function (value0) {
        return new Tick(value0);
    };
    return Tick;
})();
var update = function (updateGame) {
    return function (v) {
        return function (event) {
            var gameStateNew = updateGame(v)(event);
            if (event instanceof KeyDown) {
                return new State(gameStateNew, Data_HashSet.insert(Data_Hashable.hashableString)(event.value0)(v.value1));
            };
            if (event instanceof KeyUp) {
                return new State(gameStateNew, Data_HashSet["delete"](Data_Hashable.hashableString)(event.value0)(v.value1));
            };
            if (event instanceof Tick) {
                return new State(gameStateNew, v.value1);
            };
            throw new Error("Failed pattern match at Ui (line 20, column 3 - line 23, column 41): " + [ event.constructor.name ]);
        };
    };
};
var initialState = function (gameState) {
    return new State(gameState, Data_HashSet.empty);
};
module.exports = {
    State: State,
    KeyDown: KeyDown,
    KeyUp: KeyUp,
    Tick: Tick,
    initialState: initialState,
    update: update
};
